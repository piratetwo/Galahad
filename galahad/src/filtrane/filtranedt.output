
              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   5.465E+02  2.028E+03                        1.000E+00      0        0
    1   3.792E+01  2.547E+02  9.323E-01  5.379E-01  1.000E+00      1 GUIF   0
    2   3.615E+00  3.238E+01  9.183E-01  2.933E-01  1.076E+00      2 GUIF   0
    3   4.030E+01  3.015E+02 -1.015E+01  1.499E+00  1.076E+00      4 GUEf   1
    4   2.332E+00  3.746E+01  9.431E-01  2.671E-01  1.076E+00      5 GUIF   1
    5   1.900E-01  4.295E+00  9.548E-01  1.198E-01  1.076E+00      6 GUIF   1
    6   2.881E-09  7.247E-06  1.000E+00  6.278E-01  1.076E+00      8 GUIF   1
    7   1.800E-10  9.058E-07  9.375E-01  1.144E-03  1.256E+00     10 GUIF   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================

  1)     Impossible n

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: the problem has      0 variables!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: the problem has      0 variables!

              *********************** Bye **********************


 ========================================================================

  2)     Impossible m

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: the problem has     -1 constraints!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: the problem has     -1 constraints!

              *********************** Bye **********************


 ========================================================================

  3)     Impossible s%stage

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: attempt to SOLVE without a call to INITIALIZE

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: attempt to SOLVE without a call to INITIALIZE

              *********************** Bye **********************


 ========================================================================

  4)     x unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%x has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%x has not been allocated!

              *********************** Bye **********************


 ========================================================================

  5)     x_l unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%x_l has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%x_l has not been allocated!

              *********************** Bye **********************


 ========================================================================

  6)     x_u unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%x_u has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%x_u has not been allocated!

              *********************** Bye **********************


 ========================================================================

  7)     x_status unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%x_status has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%x_status has not been allocated!

              *********************** Bye **********************


 ========================================================================

  8)     c unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%c has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%c has not been allocated!

              *********************** Bye **********************


 ========================================================================

  9)     c_l unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%c_l has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%c_l has not been allocated!

              *********************** Bye **********************


 ========================================================================

 10)     c_u unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%c_u has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%c_u has not been allocated!

              *********************** Bye **********************


 ========================================================================

 11)     equation unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%equation has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%equation has not been allocated!

              *********************** Bye **********************


 ========================================================================

 12)     y unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%y has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%y has not been allocated!

              *********************** Bye **********************


 ========================================================================

 13)     g unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%g has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%g has not been allocated!

              *********************** Bye **********************


 ========================================================================

 14)     J_val unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%J_val has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%J_val has not been allocated!

              *********************** Bye **********************


 ========================================================================

 15)     J_row unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%J_row has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%J_row has not been allocated!

              *********************** Bye **********************


 ========================================================================

 16)     J_col unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: problem%J_col has not been allocated!

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: problem%J_col has not been allocated!

              *********************** Bye **********************


 ========================================================================

 17)     Impossible nbr_groups

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: the user-defined number of groups (    -1) is impossible.

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: the user-defined number of groups (    -1) is impossible.

              *********************** Bye **********************


 ========================================================================

 18)     control%group unallocated

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: the user-defined groups are incorrectly defined

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: the user-defined groups are incorrectly defined

              *********************** Bye **********************


 ========================================================================

 19)     Impossible control%group(1)

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: the group index of the      1-th constraint

                 (value =   3026) is impossible.

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: the group index of the      1-th constraint

                 (value =   3026) is impossible.

              *********************** Bye **********************


 ========================================================================

 20)     Correct USER_DEFINED groups

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   5.465E+02  2.028E+03                        1.000E+00      0        0
    1   3.792E+01  2.547E+02  9.323E-01  5.379E-01  1.000E+00      1 GUIF   0
    2   3.615E+00  3.238E+01  9.183E-01  2.933E-01  1.076E+00      2 GUIF   0
    3   4.030E+01  3.015E+02 -1.015E+01  1.499E+00  1.076E+00      4 GUEf   1
    4   2.332E+00  3.746E+01  9.431E-01  2.671E-01  1.076E+00      5 GUIF   1
    5   1.900E-01  4.295E+00  9.548E-01  1.198E-01  1.076E+00      6 GUIF   1
    6   2.881E-09  7.247E-06  1.000E+00  6.278E-01  1.076E+00      8 GUIF   1
    7   1.800E-10  9.058E-07  9.375E-01  1.144E-03  1.256E+00     10 GUIF   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================

 21)     No checkpoint file

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************


 FILTRANE ERROR: cannot open checkpointing file FILTRANE.sav

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: cannot open checkpointing file FILTRANE.sav

              *********************** Bye **********************


 ========================================================================

 22)     Checkpointing after iteration 2 and stop

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   5.465E+02  2.028E+03                        1.000E+00      0        0
    1   3.792E+01  2.547E+02  9.323E-01  5.379E-01  1.000E+00      1 GUIF   0
    2   3.615E+00  3.238E+01  9.183E-01  2.933E-01  1.076E+00      2 GUIF   0

 FILTRANE ERROR: maximum number of iterations reached

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: maximum number of iterations reached

              *********************** Bye **********************


 ========================================================================

 23)     Restart from checkpoint and use 1 automatic group

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    2   3.615E+00  3.238E+01                        1.076E+00      0        0
    3   4.030E+01  3.015E+02 -1.015E+01  1.499E+00  1.076E+00      2 GUEf   1
    4   2.332E+00  3.746E+01  9.431E-01  2.671E-01  1.076E+00      3 GUIF   1
    5   1.900E-01  4.295E+00  9.548E-01  1.198E-01  1.076E+00      4 GUIF   1
    6   2.881E-09  7.247E-06  1.000E+00  6.278E-01  1.076E+00      6 GUIF   1
    7   1.800E-10  9.058E-07  9.375E-01  1.144E-03  1.256E+00      8 GUIF   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================

 24)     Balance 2 automatic groups for signed filter,
         user-defined preconditioner

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   5.465E+02  5.701E+02                        1.000E+00      0        0
    1   4.227E+01  7.900E+01  9.232E-01  9.041E-01  1.000E+00      1 GUEf   1
    2   2.683E+00  9.933E+00  9.381E-01  2.967E-01  1.000E+00      2 GUEF   1
    3   1.634E-01  1.238E+00  9.391E-01  2.785E-01  2.136E+00      4 GUIF   1
    4   1.011E-02  1.527E-01  9.381E-01  1.003E-01  2.136E+00      6 GUIF   1
    5   6.289E-04  1.898E-02  9.378E-01  4.976E-02  2.136E+00      8 GUIF   1
    6   3.921E-05  2.365E-03  9.377E-01  2.479E-02  2.136E+00     10 GUIF   1
    7   2.448E-06  2.952E-04  9.376E-01  1.237E-02  2.136E+00     12 GUIF   1
    8   1.529E-07  3.687E-05  9.375E-01  6.180E-03  2.136E+00     14 GUIF   1
    9   9.553E-09  4.608E-06  9.375E-01  3.089E-03  2.136E+00     16 GUIF   1
   10   5.970E-10  5.758E-07  9.375E-01  1.544E-03  2.136E+00     18 GUIF   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================

 25)     Use Newton model,banded preconditioner and large radius
         and print between iterations 4 and 8

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

    4   1.048E+00  1.448E+00  1.210E+00  1.557E-01  2.000E+00      8 NUBF   1
    5   2.520E-01  7.100E-01  1.218E+00  1.429E-01  4.008E+00     10 NUIF   1
    6   5.685E-02  3.372E-01  1.233E+00  1.587E-01  4.008E+00     12 NUIF   1
    7   7.302E-03  1.208E-01  1.182E+00  1.546E-01  4.008E+00     14 NUIF   1
    8   1.111E-03  4.713E-02  1.142E+00  4.296E-02  4.008E+00     16 NUIF   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================

 26)     Keep best point and stop at iteration 3

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   5.465E+02  2.028E+03                        1.000E+00      0        0
    1   3.792E+01  2.547E+02  9.323E-01  5.379E-01  1.000E+00      1 GUIF   0
    2   3.615E+00  3.238E+01  9.183E-01  2.933E-01  1.076E+00      2 GUIF   0
    3   4.030E+01  3.015E+02 -1.015E+01  1.499E+00  1.076E+00      4 GUEf   1

 FILTRANE ERROR: maximum number of iterations reached

              *********************** Bye **********************


 FILTRANE workspace cleanup


 FILTRANE ERROR: maximum number of iterations reached

              *********************** Bye **********************

 f =   3.614511620058E+00

 ========================================================================

 27)     stop on unpreconditioned gradient, banded preconditioner,
         filter_increment = 1

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   5.465E+02  3.306E+01                        1.000E+00      0        0
    1   6.772E+01  1.164E+01  8.761E-01  1.685E+00  1.000E+00      1 GUEf   1
    2   4.028E+00  2.838E+00  9.405E-01  4.693E-01  1.000E+00      2 GUEf   1
    3   2.460E-01  7.015E-01  9.389E-01  2.262E-01  1.000E+00      3 GUEf   1
    4   1.521E-02  1.744E-01  9.382E-01  1.112E-01  1.000E+00      4 GUIF   1
    5   9.453E-04  4.348E-02  9.378E-01  5.513E-02  1.403E+00      5 GUIF   1
    6   5.892E-05  1.086E-02  9.377E-01  2.745E-02  1.403E+00      6 GUIF   1
    7   3.678E-06  2.712E-03  9.376E-01  1.370E-02  1.403E+00      7 GUIF   1
    8   2.297E-07  6.778E-04  9.375E-01  6.843E-03  1.403E+00      8 GUIF   1
    9   1.435E-08  1.694E-04  9.375E-01  3.420E-03  1.403E+00      9 GUIF   1
   10   8.969E-10  4.235E-05  9.375E-01  1.709E-03  1.403E+00     10 GUIF   1
   11   5.605E-11  1.059E-05  9.375E-01  8.546E-04  1.403E+00     11 GUIF   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================

 28)     no weak acceptance, no removal of dominated entries,
         best-reduction models, external Jacobian products

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   5.465E+02  2.028E+03                        1.000E+00      0        0
    1   3.792E+01  2.547E+02  9.323E-01  5.379E-01  1.000E+00      1 GUIF   0
    2   3.615E+00  3.238E+01  9.183E-01  2.933E-01  1.076E+00      2 GUIF   0
    3   4.030E+01  3.015E+02 -1.015E+01  1.499E+00  1.076E+00      4 GUEf   1
    4   2.332E+00  3.746E+01  9.431E-01  2.671E-01  1.076E+00      5 GUIF   1
    5   1.900E-01  4.295E+00  9.548E-01  1.198E-01  1.076E+00      6 GUIF   1
    6   2.881E-09  7.247E-06  1.000E+00  6.278E-01  1.076E+00      8 GUIF   1
    7   1.800E-10  9.058E-07  9.375E-01  1.144E-03  1.256E+00     10 GUIF   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================

 29)     bounds only

 ========================================================================


              **************************************************
              *                                                *
              *                   FILTRANE                     *
              *                                                *
              *     GALAHAD filter trust-region algorithm      *
              *                                                *
              *     for the nonlinear feasibility problem      *
              *                                                *
              **************************************************

 
 Iter     f(x)      ||g(x)||     rho       ||s||      Delta   #CGits Type   F
 
    0   8.100E+01  1.273E+01                        1.000E+00      0        0
    1   0.000E+00  0.000E+00  1.000E+00  1.273E+01  1.000E+00      1 GUEf   1

 Problem successfully solved: objective function is stationary.

              *********************** Bye **********************


 FILTRANE workspace cleanup


              *********************** Bye **********************


 ========================================================================


 FILTRANE workspace cleanup


              *********************** Bye **********************

