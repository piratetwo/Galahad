#  Main body of the installation makefile for the GALAHAD BSC package

#  N. Gould, D. Orban and Ph. L. Toint.
#  This version: 19 X 2005

SHELL = /bin/$(BINSHELL)

#  compiler flags

FFLAGS    = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) $(USUAL)
FFLAGSS   = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) $(SPECIAL)
FFLAGSN   = $(BASIC) $(NOOPTIMIZATION) $(DEBUG) $(MODULES) $(F90)
FFLAGS77  = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F77) $(USUAL)
FFLAGS77S = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F77) $(SPECIAL)
RUNFFLAGS =          $(OPTIMIZATION) $(DEBUG) $(MODULES)
#RUNFFLAGS =          $(OPTIMIZATION) $(DEBUG) $(MODULES) -L/usr/lib -llapack

#  names of random libraries

LG  = $(OBJ)/libgalahad.a
LGS = $(OBJS)/libgalahad.a
LGD = $(OBJD)/libgalahad.a

BLG  = $(OBJ)/libgalahad_blas.a
BLGS = $(OBJS)/libgalahad_blas.a
BLGD = $(OBJD)/libgalahad_blas.a

LLG  = $(OBJ)/libgalahad_lapack.a
LLGS = $(OBJS)/libgalahad_lapack.a
LLGD = $(OBJD)/libgalahad_lapack.a

HLG  = $(OBJ)/libgalahad_hsl.a
HLGS = $(OBJS)/libgalahad_hsl.a
HLGD = $(OBJD)/libgalahad_hsl.a

MLG  = $(OBJ)/libgalahad_metis.a
MLGS = $(OBJS)/libgalahad_metis.a
MLGD = $(OBJD)/libgalahad_metis.a

#  Libraries used

LIBS = -lgalahad $(HSL) $(LAPACK) $(BLAS)

#  Archive manipulation strings

ARR = $(AR) $(ARREPFLAGS) $(LG)
RMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(LG)
RMOBFILE = $(GALAHAD)/bin/rmobfile $(RM) $(OBJ)

BARR = $(AR) $(ARREPFLAGS) $(BLG)
BRMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(BLG)

LARR = $(AR) $(ARREPFLAGS) $(LLG)
LRMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(LLG)

HARR = $(AR) $(ARREPFLAGS) $(HLG)
HRMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(HLG)

MARR = $(AR) $(ARREPFLAGS) $(MLG)
MRMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $MHLG)

#  sed scripts

LSEDS = $(GALAHAD)/seds/$(LINEARSOLVER).sed
LPSEDS = $(GALAHAD)/seds/$(LINEARSOLVER)_precon.sed

#  compilation agenda

SBSC = basics $(LGS)(bsc.o)
DBSC = basics $(LGD)(bsc.o)

BSCOBJECTSS = $(SBSC)
BSCOBJECTSD = $(DBSC)

BSCDS = $(DBSC) $(OBJD)/bscs.o
BSCDT = $(DBSC) $(OBJD)/bsct.o
BSCSS = $(SBSC) $(OBJS)/bscs.o
BSCST = $(SBSC) $(OBJS)/bsct.o

RBSCDS = $(OBJD)/bscs.o -L$(OBJD) $(LIBS)
RBSCDT = $(OBJD)/bsct.o -L$(OBJD) $(LIBS)
RBSCSS = $(OBJS)/bscs.o -L$(OBJS) $(LIBS)
RBSCST = $(OBJS)/bsct.o -L$(OBJS) $(LIBS)

SUCC = precision version) compiled successfully

#  main compilations and runs

all: bsc
all_bsc: bsc
test: test_bsc

# bsc

bsc_silent: bsc_silent_$(PRECIS)
bsc_silent_single: $(BSCOBJECTSS)
bsc_silent_double: $(BSCOBJECTSD)

bsc: bsc_$(PRECIS)
	@printf ' %-21s\n' "GALAHAD: BSC ($(PRECIS) $(SUCC)"
bsc_single: $(BSCOBJECTSS)
	$(RANLIB) $(LGS)
bsc_double: $(BSCOBJECTSD)
	$(RANLIB) $(LGD)

bscsrunall: bscss bscst
bscdrunall: bscds bscdt
bscrunall: bscdrunall bscsrunall

test_bsc: test_bsc_$(PRECIS)

test_bsc_single: bscst
	echo ""
	echo " Tests for bsc complete"

test_bsc_double: bscdt
	echo ""
	echo " Tests for bsc complete"

#  basic packages

basics:
	( cd ../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            basics_silent PRECIS=$(PRECIS) PWD=$(PWD)/../general )
copyright:
	( cd ../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            copyright.o PRECIS=$(PRECIS) PWD=$(PWD)/../general )

# run spec-sheet example tests

bscss: $(BSCSS)
	$(FORTRAN) $(RUNFFLAGS) $(SPECIAL) -o run_bsc $(RBSCSS)
	- ./run_bsc >& bscs.output
	cat bscs.output
	rm ./run_bsc

bscst: $(BSCST)
	echo " Exhaustive test of subroutine interface to bsc"
	$(FORTRAN) $(RUNFFLAGS) $(SPECIAL) -o run_bsc $(RBSCST)
	- ./run_bsc >& bsct.output
	cat bsct.output
	rm ./run_bsc

bscds: $(BSCDS)
	$(FORTRAN) $(RUNFFLAGS) $(SPECIAL) -o run_bsc $(RBSCDS)
	- ./run_bsc >& bscds.output
	cat bscds.output
	rm ./run_bsc

bscdt: $(BSCDT)
	echo " Exhaustive test of subroutine interface to bsc"
	$(FORTRAN) $(RUNFFLAGS) $(SPECIAL) -o run_bsc $(RBSCDT)
	- ./run_bsc >& bscdt.output
	cat bscdt.output
	rm ./run_bsc

#  Substantial GALAHAD packages

bsc.o: $(LG)(bsc.o)

$(LG)(bsc.o): ../bsc/bsc.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "bsc   "
	$(SED) -f $(SEDS) ../bsc/bsc.f90 > $(OBJ)/bsc1.f90
	$(SED) -f $(LSEDS) $(OBJ)/bsc1.f90 > $(OBJ)/bsc2.f90
	$(SED) -f $(LPSEDS) $(OBJ)/bsc2.f90 > $(OBJ)/bsc3.f90
	$(SED) "s/^.$(NOT95)/     /" $(OBJ)/bsc3.f90 > $(OBJ)/bsc.f90
	cd $(OBJ); $(FORTRAN) -o bsc.o $(FFLAGSS) bsc.f90 \
                || ( printf ' %-26s' "=> Disabling optimization " ; \
                   $(FORTRAN) -o bsc.o $(FFLAGSN) bsc.f90 )
	cd $(OBJ); $(ARR) bsc.o ; $(RM) bsc.f90 bsc1.f90 bsc2.f90 \
                                          bsc3.f90 bsc.o
	$(RMOBFILE) bscs.o
	$(RMOBFILE) bsct.o
	$(MVMODS)
	@printf '[ OK ]\n'

#  test decks

bscs.o: $(OBJ)/bscs.o

$(OBJ)/bscs.o: ../bsc/bscs.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "bscs  "
	$(SED) -f $(SEDS) ../bsc/bscs.f90 > $(OBJ)/bscs1.f90
	$(SED) -f $(LSEDS) $(OBJ)/bscs1.f90 > $(OBJ)/bscs.f90
	cd $(OBJ) ; $(FORTRAN) -o bscs.o $(FFLAGS) bscs.f90
	rm $(OBJ)/*.f90
	@printf '[ OK ]\n'

bsct.o: $(OBJ)/bsct.o

$(OBJ)/bsct.o: ../bsc/bsct.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "bsct  "
	$(SED) -f $(SEDS) ../bsc/bsct.f90 > $(OBJ)/bsct1.f90
	$(SED) -f $(LSEDS) $(OBJ)/bsct1.f90 > $(OBJ)/bsct.f90
	cd $(OBJ) ; $(FORTRAN) -o bsct.o $(FFLAGSS) bsct.f90
	rm $(OBJ)/*.f90
	@printf '[ OK ]\n'

#  book keeping

clean:
	@printf ' %-9s\t\t' "Cleaning"
	$(RM) $(LG) $(OBJ)/bsct.o
	@printf '[ OK ]\n'

cleanall:
	@printf ' %-14s\t\t' "Removing all $(PRECIS) precision object and module files"
	$(RM) $(OBJ)/* $(MOD)/*
	@printf '[ OK ]\n'

rmbsc:
	@printf ' %-9s %-15s\t\t' "Removing" "bsc from archive "
	$(RMARFILE) bsc.o
	@printf '[ OK ]\n'

